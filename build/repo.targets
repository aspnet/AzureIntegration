<Project>
  <Import Project="$(RepositoryRoot)\build\dependencies.props" />

  <PropertyGroup>
      <TestDotNetPath>$(RepositoryRoot).test-dotnet\</TestDotNetPath>
      <AppsArtifactDirectory>$(RepositoryRoot)artifacts\apps</AppsArtifactDirectory>
      <SiteExtensionWorkingDirectory>$(TestDotNetPath)extension\</SiteExtensionWorkingDirectory>
      <SiteExtensionOutputDirectory>$(RepositoryRoot)artifacts\extensions</SiteExtensionOutputDirectory>
      <TestProjectDirectory>$(RepositoryRoot)\test\Microsoft.AspNetCore.AzureAppServices.FunctionalTests\</TestProjectDirectory>
      <SiteExtensionFeed Condition="$(SiteExtensionFeed) == ''">https://dotnet.myget.org/F/aspnetcore-ci-dev/</SiteExtensionFeed>
      <DotnetChannel>master</DotnetChannel>
      <DotnetVersion>coherent</DotnetVersion>
  </PropertyGroup>

  <ItemGroup>
    <SiteExtensions Include="AspNetCoreTestBundle">
      <Project>$(RepositoryRoot)src\Microsoft.AspNetCore.AzureAppServices.TestBundle\Microsoft.AspNetCore.AzureAppServices.TestBundle.csproj</Project>
    </SiteExtensions>
    <SiteExtensions Include="AspNetCoreRuntime">
      <Project>$(RepositoryRoot)src\Microsoft.AspNetCore.Runtime.SiteExtension\Microsoft.AspNetCore.Runtime.SiteExtension.csproj</Project>
    </SiteExtensions>
  </ItemGroup>

  <Target Name="_AddTestRuntimes">
    <ItemGroup>
      <DotNetCoreSdk Include="2.0.0" InstallDir="$(TestDotNetPath)2.0\" FallbackPackageCache="True" />
      <DotNetCoreSdk Include="$(MicrosoftNETCoreApp21PackageVersion)" Channel="master" InstallDir="$(TestDotNetPath)latest\" FallbackPackageCache="True" />
    </ItemGroup>
  </Target>

  <Target Name="_CleanSiteExtension">
    <RemoveDir Directories="$(SiteExtensionWorkingDirectory)" Condition="Exists($(SiteExtensionWorkingDirectory))" />
  </Target>

  <Target Name="_AddSiteExtensionRuntime">
    <PropertyGroup>
      <_SdkVersion>$([System.IO.Path]::GetFileName($([System.IO.Path]::GetDirectoryName('$(MSBuildExtensionsPath)'))))</_SdkVersion>
    </PropertyGroup>

    <ItemGroup>
      <DotNetCoreSdk Include="$(_SdkVersion)" InstallDir="$(SiteExtensionWorkingDirectory)" Arch="x86" />
      <DotNetCoreRuntime Include="$(MicrosoftNETCoreApp21PackageVersion)" InstallDir="$(SiteExtensionWorkingDirectory)" Arch="x86" />
    </ItemGroup>
  </Target>

  <Target Name="BuildSiteExtension" DependsOnTargets="_CleanSiteExtension;_AddSiteExtensionRuntime;InstallDotNet">
    <PropertyGroup>
      <ArtifactDependencyLocation>$(RepositoryRoot)\.deps</ArtifactDependencyLocation>
    </PropertyGroup>

    <ItemGroup>
      <RuntimeArchiveItems Include="$(RuntimeArchives)" />
      <DotNetCacheArchiveItems Include="$(DotNetCacheArchives)" />

      <_CleanupFiles
        Include="$(SiteExtensionWorkingDirectory)additionalDeps;$(SiteExtensionWorkingDirectory)store" />

      <_CleanupFiles
        Include="$([System.IO.Directory]::GetDirectories('$(SiteExtensionWorkingDirectory)shared\Microsoft.NETCore.App\'))"
        Exclude="$(SiteExtensionWorkingDirectory)shared\Microsoft.NETCore.App\$(MicrosoftNETCoreApp21PackageVersion)" />

      <_CleanupFiles
        Include="$([System.IO.Directory]::GetDirectories('$(SiteExtensionWorkingDirectory)host\fxr'))"
        Exclude="$(SiteExtensionWorkingDirectory)host\fxr\$(MicrosoftNETCoreApp21PackageVersion)" />

      <BundledTemplate Include="Microsoft.DotNet.Web.ItemTemplates" Version="$(PackageVersion)" />
      <BundledTemplate Include="Microsoft.DotNet.Web.ProjectTemplates.2.1" Version="$(PackageVersion)" />
      <BundledTemplate Include="Microsoft.DotNet.Web.Spa.ProjectTemplates" Version="$(PackageVersion)" />
    </ItemGroup>

    <Message Text="Removing %(_CleanupFiles.Identity)" Importance="High" />
    <RemoveDir Directories="@(_CleanupFiles)" />

    <Copy SourceFiles="$(ArtifactDependencyLocation)\%(BundledTemplate.Identity).%(Version).nupkg" DestinationFolder="$(SiteExtensionWorkingDirectory)\sdk\$(_SdkVersion)\Templates" />
    <Copy SourceFiles="$(ArtifactDependencyLocation)\nuGetPackagesArchive-$(PackageVersion).lzma" DestinationFiles="$(SiteExtensionWorkingDirectory)\sdk\$(_SdkVersion)\nuGetPackagesArchive.lzma" />

    <UnzipArchive File="$(ArtifactDependencyLocation)\aspnetcore-shared-$(PackageVersion)-win7-x86.zip" Destination="$(SiteExtensionWorkingDirectory)" Overwrite="true" />
    <UnzipArchive File="%(RuntimeArchiveItems.Identity)" Destination="$(SiteExtensionWorkingDirectory)" Condition="'$(RuntimeArchives)' != ''" Overwrite="true" />
    <UnzipArchive File="%(DotNetCacheArchiveItems.Identity)" Destination="$(SiteExtensionWorkingDirectory)DotNetCache" Condition="'$(DotNetCacheArchives)' != ''" Overwrite="true" />

    <MSBuild Projects="%(SiteExtensions.Idenity)"
      Targets="Restore;Pack"
      Properties="DotnetHomeDirectory=$(SiteExtensionWorkingDirectory);BuildNumber=$(BuildNumber);PackageOutputPath=$(SiteExtensionOutputDirectory)" />

  </Target>

  <Target Name="PushSiteExtension">
    <ItemGroup>
      <RepositoryNupkgs Include="$(SiteExtensionOutputDirectory)\%(SiteExtensions.PackageName).*.nupkg" />
    </ItemGroup>

    <PushNuGetPackages
      Packages="@(RepositoryNupkgs)"
      Feed="$(SiteExtensionFeed)"
      ApiKey="$(APIKey)"
      TimeoutSeconds="600"/>

  </Target>

  <Target Name="TestSiteExtension" DependsOnTargets="_AddTestRuntimes;InstallDotNet;Restore">

    <Copy SourceFiles="$(TestProjectDirectory)NuGet.config.template" DestinationFiles="$(RepositoryRoot)artifacts\NuGet.config" />
    <Copy SourceFiles="$(TestProjectDirectory)global.json.template" DestinationFiles="$(RepositoryRoot)artifacts\global.json" />
    <Copy SourceFiles="$(TestProjectDirectory)Directory.Build.props.template" DestinationFiles="$(RepositoryRoot)artifacts\Directory.Build.props" />
    <Copy SourceFiles="$(TestProjectDirectory)Directory.Build.targets.template" DestinationFiles="$(RepositoryRoot)artifacts\Directory.Build.targets" />

    <Exec Command="%(DotNetCoreSdk.InstallDir)dotnet msbuild /version" WorkingDirectory="$(RepositoryRoot)artifacts\" />

    <Exec Command="dotnet run" WorkingDirectory="$(TestProjectDirectory)"/>

  </Target>

  <Target Name="CleanArtifactsApplications" BeforeTargets="CleanArtifacts" >
    <!--
      git deploy creates read-only files which msbuild is unable to remove
      NOTE: we run tests only on windows
    -->
    <Exec Command="rmdir /S /Q &quot;$(AppsArtifactDirectory)&quot;" Condition="Exists($(AppsArtifactDirectory))" />
    <RemoveDir Directories="$(SiteExtensionOutputDirectory)" Condition="Exists($(SiteExtensionOutputDirectory))" />
  </Target>

</Project>
